<?phpinclude_once("dbconfig.php");include_once("functions.php");function addCalendar($st, $et, $sub, $ade){  $ret = array();  try{    $db = new DBConnection();    $db->getConnection();    $sql = "insert into its_jqcalendar (`subject`, `starttime`, `endtime`, `isalldayevent`, `user_id`) values ('"      .mysql_real_escape_string($sub)."', '"      .php2MySqlTime(js2PhpTime($st))."', '"      .php2MySqlTime(js2PhpTime($et))."', '"      .mysql_real_escape_string($ade)."', '"      .mysql_real_escape_string($_GET['user_id'])."' )";    //echo($sql);		if(mysql_query($sql)==false){      $ret['IsSuccess'] = false;      $ret['Msg'] = 'Tietokantavirhe: ' . mysql_error();    }else{      $ret['IsSuccess'] = true;      $ret['Msg'] = 'Lisäys onnistui!';      $ret['Data'] = mysql_insert_id();    }	}catch(Exception $e){     $ret['IsSuccess'] = false;     $ret['Msg'] = 'Virhe: ' . $e->getMessage();  }  return $ret;}function addDetailedCalendar($st, $et, $sub, $ade, $dscr, $loc, $color, $tz){  $ret = array();  try{    $db = new DBConnection();    $db->getConnection();    $sql = "insert into its_jqcalendar (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `tila_id`, `color`, `user_id`) values ('"      .mysql_real_escape_string($sub)."', '"      .php2MySqlTime(js2PhpTime($st))."', '"      .php2MySqlTime(js2PhpTime($et))."', '"      .mysql_real_escape_string($ade)."', '"      .mysql_real_escape_string($dscr)."', '"      .mysql_real_escape_string($loc)."', '"      .mysql_real_escape_string($color)."', '"      .mysql_real_escape_string($_GET['user_id'])."' )";    //echo($sql);		if(mysql_query($sql)==false){      $ret['IsSuccess'] = false;      $ret['Msg'] = 'Tietokantavirhe: ' . mysql_error();    }else{      $ret['IsSuccess'] = true;      $ret['Msg'] = 'Lisäys onnistui!';      $ret['Data'] = mysql_insert_id();    }	}catch(Exception $e){     $ret['IsSuccess'] = false;     $ret['Msg'] = 'Virhe: ' . $e->getMessage();  }  return $ret;}function listCalendarByRange($sd, $ed){  $ret = array();  $ret['events'] = array();  $ret["issort"] =true;  $ret["start"] = php2JsTime($sd);  $ret["end"] = php2JsTime($ed);  $ret['error'] = null;  try{    $db = new DBConnection();    $db->getConnection();        /**     * Haetaan kaikki käyttäjän vahvistamat kalenterimerkinnät, SEKÄ käyttäjän omat kalenterimerkinnät tietyltä aikaväliltä.     */    $user_id = (int) htmlentities($_GET['user_id'], ENT_COMPAT);    $sql = "SELECT * FROM its_jqcalendar cal LEFT JOIN its_jqcalendar_requests req ON req.jqcalendar_id = cal.Id WHERE ((req.kutsu_user_id = '{$user_id}' AND req.vahvistettu = 1) OR cal.user_id = '{$user_id}') AND (cal.StartTime BETWEEN '" . php2MySqlTime($sd) . "' and '" . php2MySqlTime($ed) . "')";        $handle = mysql_query($sql);	    //echo $sql;    while ($row = mysql_fetch_object($handle)) {      $ret['events'][] = array(        $row->Id,        $row->Subject,        php2JsTime(mySql2PhpTime($row->StartTime)),        php2JsTime(mySql2PhpTime($row->EndTime)),        $row->IsAllDayEvent,        0, //more than one day event        //$row->InstanceType,        0,//Recurring event,        $row->Color,        1,//editable        $row->Location,         ''//$attends      );    }	}catch(Exception $e){     $ret['error'] = $e->getMessage();  }  return $ret;}function listCalendar($day, $type){  $phpTime = js2PhpTime($day);  //echo $phpTime . "+" . $type;  switch($type){    case "month":      $st = mktime(0, 0, 0, date("m", $phpTime), 1, date("Y", $phpTime));      $et = mktime(0, 0, -1, date("m", $phpTime)+1, 1, date("Y", $phpTime));      break;    case "week":      //suppose first day of a week is monday       $monday  =  date("d", $phpTime) - date('N', $phpTime) + 1;      //echo date('N', $phpTime);      $st = mktime(0,0,0,date("m", $phpTime), $monday, date("Y", $phpTime));      $et = mktime(0,0,-1,date("m", $phpTime), $monday+7, date("Y", $phpTime));      break;    case "day":      $st = mktime(0, 0, 0, date("m", $phpTime), date("d", $phpTime), date("Y", $phpTime));      $et = mktime(0, 0, -1, date("m", $phpTime), date("d", $phpTime)+1, date("Y", $phpTime));      break;  }  //echo $st . "--" . $et;  return listCalendarByRange($st, $et);}function updateCalendar($id, $st, $et){  $user_id = (int) htmlentities($_GET['user_id'], ENT_COMPAT);  $ret = array();  try{    $db = new DBConnection();    $db->getConnection();    $sql = "update its_jqcalendar set"      . " `starttime`='" . php2MySqlTime(js2PhpTime($st)) . "', "      . " `endtime`='" . php2MySqlTime(js2PhpTime($et)) . "' "      . "where `id`=" . $id . ' AND user_id = ' . $user_id;    //echo $sql;    if(mysql_query($sql)== false){      $ret['IsSuccess'] = false;      $ret['Msg'] = 'Tietokantavirhe: ' . mysql_error();    }    elseif (mysql_affected_rows() == 0) {        $ret['IsSuccess'] = false;        $ret['Msg'] = 'Voit muokata vain itse tehtyjä merkintöjä.';    }    else{      $ret['IsSuccess'] = true;      $ret['Msg'] = 'Muokkaus onnistui!';    }	}catch(Exception $e){     $ret['IsSuccess'] = false;     $ret['Msg'] = 'Virhe: ' . $e->getMessage();  }  return $ret;}function updateDetailedCalendar($id, $st, $et, $sub, $ade, $dscr, $loc, $color, $tz){  $user_id = (int) htmlentities($_GET['user_id'], ENT_COMPAT);  $ret = array();  try{    $db = new DBConnection();    $db->getConnection();    $sql = "update its_jqcalendar set"      . " `starttime`='" . php2MySqlTime(js2PhpTime($st)) . "', "      . " `endtime`='" . php2MySqlTime(js2PhpTime($et)) . "', "      . " `subject`='" . mysql_real_escape_string($sub) . "', "      . " `isalldayevent`='" . mysql_real_escape_string($ade) . "', "      . " `description`='" . mysql_real_escape_string($dscr) . "', "      . " `tila_id`='" . mysql_real_escape_string($loc) . "', "      . " `color`='" . mysql_real_escape_string($color) . "' "      . "where `id`=" . $id . ' AND `user_id` = ' . $user_id;    //echo $sql;    if(mysql_query($sql)==false){      $ret['IsSuccess'] = false;      $ret['Msg'] = 'Tietokantavirhe: ' . mysql_error();    }    elseif (mysql_affected_rows() == 0) {      $ret['IsSuccess'] = false;      $ret['Msg'] = 'Voit muokata vain itse tehtyjä merkintöjä.';    }    else{      $ret['IsSuccess'] = true;      $ret['Msg'] = 'Muokkaus onnistui!';    }	}catch(Exception $e){     $ret['IsSuccess'] = false;     $ret['Msg'] = 'Virhe: ' . $e->getMessage();  }  return $ret;}function removeCalendar($id){  $user_id = (int) htmlentities($_GET['user_id'], ENT_COMPAT);  $ret = array();  try{    $db = new DBConnection();    $db->getConnection();    $sql = "delete from its_jqcalendar where `id`=" . $id . ' AND `user_id` = ' . $user_id;		if(mysql_query($sql)==false){      $ret['IsSuccess'] = false;      $ret['Msg'] = 'Tietokantavirhe: ' . mysql_error();    }    elseif (mysql_affected_rows() == 0) {      $ret['IsSuccess'] = false;      $ret['Msg'] = 'Voit poistaa vain itse tehtyjä merkintöjä.';    }    else{      $ret['IsSuccess'] = true;      $ret['Msg'] = 'Poisto onnistui!';    }	}catch(Exception $e){     $ret['IsSuccess'] = false;     $ret['Msg'] = 'Virhe: ' . $e->getMessage();  }  return $ret;}header('Content-type:text/javascript;charset=UTF-8');$method = $_GET["method"];switch ($method) {    case "add":        $ret = addCalendar($_POST["CalendarStartTime"], $_POST["CalendarEndTime"], $_POST["CalendarTitle"], $_POST["IsAllDayEvent"]);        break;    case "list":	        $ret = listCalendar($_POST["showdate"], $_POST["viewtype"]);		        break;    case "update":        $ret = updateCalendar($_POST["calendarId"], $_POST["CalendarStartTime"], $_POST["CalendarEndTime"]);        break;     case "remove":        $ret = removeCalendar( $_POST["calendarId"]);        break;    case "adddetails":        $st = $_POST["stpartdate"] . " " . $_POST["stparttime"];        $et = $_POST["etpartdate"] . " " . $_POST["etparttime"];        if(isset($_GET["id"])){            $ret = updateDetailedCalendar($_GET["id"], $st, $et,                 $_POST["Subject"], isset($_POST["IsAllDayEvent"])?1:0, $_POST["Description"],                 $_POST["Location"], $_POST["colorvalue"], $_POST["timezone"]);        }else{            $ret = addDetailedCalendar($st, $et,                                    $_POST["Subject"], isset($_POST["IsAllDayEvent"])?1:0, $_POST["Description"],                 $_POST["Location"], $_POST["colorvalue"], $_POST["timezone"]);        }                break; }echo json_encode($ret); ?>